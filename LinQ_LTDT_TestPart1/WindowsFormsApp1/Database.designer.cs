#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GraphTheoryProject")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertHospital(Hospital instance);
    partial void UpdateHospital(Hospital instance);
    partial void DeleteHospital(Hospital instance);
    partial void InsertPatient(Patient instance);
    partial void UpdatePatient(Patient instance);
    partial void DeletePatient(Patient instance);
    partial void InsertNguoiDung(NguoiDung instance);
    partial void UpdateNguoiDung(NguoiDung instance);
    partial void DeleteNguoiDung(NguoiDung instance);
    partial void InsertAmbulance(Ambulance instance);
    partial void UpdateAmbulance(Ambulance instance);
    partial void DeleteAmbulance(Ambulance instance);
    partial void InsertAmbulanceMission(AmbulanceMission instance);
    partial void UpdateAmbulanceMission(AmbulanceMission instance);
    partial void DeleteAmbulanceMission(AmbulanceMission instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::WindowsFormsApp1.Properties.Settings.Default.GraphTheoryProjectConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Hospital> Hospitals
		{
			get
			{
				return this.GetTable<Hospital>();
			}
		}
		
		public System.Data.Linq.Table<Patient> Patients
		{
			get
			{
				return this.GetTable<Patient>();
			}
		}
		
		public System.Data.Linq.Table<NguoiDung> NguoiDungs
		{
			get
			{
				return this.GetTable<NguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<Ambulance> Ambulances
		{
			get
			{
				return this.GetTable<Ambulance>();
			}
		}
		
		public System.Data.Linq.Table<AmbulanceMission> AmbulanceMissions
		{
			get
			{
				return this.GetTable<AmbulanceMission>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hospital")]
	public partial class Hospital : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HospitalID;
		
		private string _HospitalName;
		
		private EntitySet<Patient> _Patients;
		
		private EntitySet<Ambulance> _Ambulances;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHospitalIDChanging(int value);
    partial void OnHospitalIDChanged();
    partial void OnHospitalNameChanging(string value);
    partial void OnHospitalNameChanged();
    #endregion
		
		public Hospital()
		{
			this._Patients = new EntitySet<Patient>(new Action<Patient>(this.attach_Patients), new Action<Patient>(this.detach_Patients));
			this._Ambulances = new EntitySet<Ambulance>(new Action<Ambulance>(this.attach_Ambulances), new Action<Ambulance>(this.detach_Ambulances));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HospitalID
		{
			get
			{
				return this._HospitalID;
			}
			set
			{
				if ((this._HospitalID != value))
				{
					this.OnHospitalIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalID = value;
					this.SendPropertyChanged("HospitalID");
					this.OnHospitalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HospitalName
		{
			get
			{
				return this._HospitalName;
			}
			set
			{
				if ((this._HospitalName != value))
				{
					this.OnHospitalNameChanging(value);
					this.SendPropertyChanging();
					this._HospitalName = value;
					this.SendPropertyChanged("HospitalName");
					this.OnHospitalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hospital_Patient", Storage="_Patients", ThisKey="HospitalID", OtherKey="HospitalID")]
		public EntitySet<Patient> Patients
		{
			get
			{
				return this._Patients;
			}
			set
			{
				this._Patients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hospital_Ambulance", Storage="_Ambulances", ThisKey="HospitalID", OtherKey="AmbulanceLocation")]
		public EntitySet<Ambulance> Ambulances
		{
			get
			{
				return this._Ambulances;
			}
			set
			{
				this._Ambulances.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Patients(Patient entity)
		{
			this.SendPropertyChanging();
			entity.Hospital = this;
		}
		
		private void detach_Patients(Patient entity)
		{
			this.SendPropertyChanging();
			entity.Hospital = null;
		}
		
		private void attach_Ambulances(Ambulance entity)
		{
			this.SendPropertyChanging();
			entity.Hospital = this;
		}
		
		private void detach_Ambulances(Ambulance entity)
		{
			this.SendPropertyChanging();
			entity.Hospital = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Patient")]
	public partial class Patient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PatientId;
		
		private string _PatientName;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private System.Nullable<int> _HospitalID;
		
		private string _Gender;
		
		private string _Phone;
		
		private string _EmercengyPhone;
		
		private string _Status;
		
		private string _Condition;
		
		private EntityRef<Hospital> _Hospital;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPatientIdChanging(int value);
    partial void OnPatientIdChanged();
    partial void OnPatientNameChanging(string value);
    partial void OnPatientNameChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnHospitalIDChanging(System.Nullable<int> value);
    partial void OnHospitalIDChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmercengyPhoneChanging(string value);
    partial void OnEmercengyPhoneChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnConditionChanging(string value);
    partial void OnConditionChanged();
    #endregion
		
		public Patient()
		{
			this._Hospital = default(EntityRef<Hospital>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PatientId
		{
			get
			{
				return this._PatientId;
			}
			set
			{
				if ((this._PatientId != value))
				{
					this.OnPatientIdChanging(value);
					this.SendPropertyChanging();
					this._PatientId = value;
					this.SendPropertyChanged("PatientId");
					this.OnPatientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string PatientName
		{
			get
			{
				return this._PatientName;
			}
			set
			{
				if ((this._PatientName != value))
				{
					this.OnPatientNameChanging(value);
					this.SendPropertyChanging();
					this._PatientName = value;
					this.SendPropertyChanged("PatientName");
					this.OnPatientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="Date")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalID", DbType="Int")]
		public System.Nullable<int> HospitalID
		{
			get
			{
				return this._HospitalID;
			}
			set
			{
				if ((this._HospitalID != value))
				{
					if (this._Hospital.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHospitalIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalID = value;
					this.SendPropertyChanged("HospitalID");
					this.OnHospitalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(10)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(10)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmercengyPhone", DbType="VarChar(10)")]
		public string EmercengyPhone
		{
			get
			{
				return this._EmercengyPhone;
			}
			set
			{
				if ((this._EmercengyPhone != value))
				{
					this.OnEmercengyPhoneChanging(value);
					this.SendPropertyChanging();
					this._EmercengyPhone = value;
					this.SendPropertyChanged("EmercengyPhone");
					this.OnEmercengyPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(20)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Condition", DbType="NVarChar(20)")]
		public string Condition
		{
			get
			{
				return this._Condition;
			}
			set
			{
				if ((this._Condition != value))
				{
					this.OnConditionChanging(value);
					this.SendPropertyChanging();
					this._Condition = value;
					this.SendPropertyChanged("Condition");
					this.OnConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hospital_Patient", Storage="_Hospital", ThisKey="HospitalID", OtherKey="HospitalID", IsForeignKey=true)]
		public Hospital Hospital
		{
			get
			{
				return this._Hospital.Entity;
			}
			set
			{
				Hospital previousValue = this._Hospital.Entity;
				if (((previousValue != value) 
							|| (this._Hospital.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hospital.Entity = null;
						previousValue.Patients.Remove(this);
					}
					this._Hospital.Entity = value;
					if ((value != null))
					{
						value.Patients.Add(this);
						this._HospitalID = value.HospitalID;
					}
					else
					{
						this._HospitalID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Hospital");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguoiDung")]
	public partial class NguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserName;
		
		private System.Data.Linq.Binary _Password;
		
		private string _Email;
		
		private string _OTP;
		
		private System.Nullable<System.DateTime> _OTPDateSend;
		
		private System.Nullable<System.DateTime> _DateCreate;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<System.DateTime> _DateActive;
		
		private System.Nullable<int> _LevelID;
		
		private string _RandomKey;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(System.Data.Linq.Binary value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnOTPChanging(string value);
    partial void OnOTPChanged();
    partial void OnOTPDateSendChanging(System.Nullable<System.DateTime> value);
    partial void OnOTPDateSendChanged();
    partial void OnDateCreateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreateChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnDateActiveChanging(System.Nullable<System.DateTime> value);
    partial void OnDateActiveChanged();
    partial void OnLevelIDChanging(System.Nullable<int> value);
    partial void OnLevelIDChanged();
    partial void OnRandomKeyChanging(string value);
    partial void OnRandomKeyChanged();
    #endregion
		
		public NguoiDung()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTP", DbType="VarChar(50)")]
		public string OTP
		{
			get
			{
				return this._OTP;
			}
			set
			{
				if ((this._OTP != value))
				{
					this.OnOTPChanging(value);
					this.SendPropertyChanging();
					this._OTP = value;
					this.SendPropertyChanged("OTP");
					this.OnOTPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTPDateSend", DbType="DateTime")]
		public System.Nullable<System.DateTime> OTPDateSend
		{
			get
			{
				return this._OTPDateSend;
			}
			set
			{
				if ((this._OTPDateSend != value))
				{
					this.OnOTPDateSendChanging(value);
					this.SendPropertyChanging();
					this._OTPDateSend = value;
					this.SendPropertyChanged("OTPDateSend");
					this.OnOTPDateSendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreate
		{
			get
			{
				return this._DateCreate;
			}
			set
			{
				if ((this._DateCreate != value))
				{
					this.OnDateCreateChanging(value);
					this.SendPropertyChanging();
					this._DateCreate = value;
					this.SendPropertyChanged("DateCreate");
					this.OnDateCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateActive", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateActive
		{
			get
			{
				return this._DateActive;
			}
			set
			{
				if ((this._DateActive != value))
				{
					this.OnDateActiveChanging(value);
					this.SendPropertyChanging();
					this._DateActive = value;
					this.SendPropertyChanged("DateActive");
					this.OnDateActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelID", DbType="Int")]
		public System.Nullable<int> LevelID
		{
			get
			{
				return this._LevelID;
			}
			set
			{
				if ((this._LevelID != value))
				{
					this.OnLevelIDChanging(value);
					this.SendPropertyChanging();
					this._LevelID = value;
					this.SendPropertyChanged("LevelID");
					this.OnLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RandomKey", DbType="NVarChar(50)")]
		public string RandomKey
		{
			get
			{
				return this._RandomKey;
			}
			set
			{
				if ((this._RandomKey != value))
				{
					this.OnRandomKeyChanging(value);
					this.SendPropertyChanging();
					this._RandomKey = value;
					this.SendPropertyChanged("RandomKey");
					this.OnRandomKeyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ambulance")]
	public partial class Ambulance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AmbulanceId;
		
		private string _AmbulanceName;
		
		private System.Nullable<int> _AmbulanceLocation;
		
		private System.Nullable<bool> _Đang_Hoạt_Động;
		
		private EntityRef<Hospital> _Hospital;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAmbulanceIdChanging(string value);
    partial void OnAmbulanceIdChanged();
    partial void OnAmbulanceNameChanging(string value);
    partial void OnAmbulanceNameChanged();
    partial void OnAmbulanceLocationChanging(System.Nullable<int> value);
    partial void OnAmbulanceLocationChanged();
    partial void OnĐang_Hoạt_ĐộngChanging(System.Nullable<bool> value);
    partial void OnĐang_Hoạt_ĐộngChanged();
    #endregion
		
		public Ambulance()
		{
			this._Hospital = default(EntityRef<Hospital>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmbulanceId", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AmbulanceId
		{
			get
			{
				return this._AmbulanceId;
			}
			set
			{
				if ((this._AmbulanceId != value))
				{
					this.OnAmbulanceIdChanging(value);
					this.SendPropertyChanging();
					this._AmbulanceId = value;
					this.SendPropertyChanged("AmbulanceId");
					this.OnAmbulanceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmbulanceName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AmbulanceName
		{
			get
			{
				return this._AmbulanceName;
			}
			set
			{
				if ((this._AmbulanceName != value))
				{
					this.OnAmbulanceNameChanging(value);
					this.SendPropertyChanging();
					this._AmbulanceName = value;
					this.SendPropertyChanged("AmbulanceName");
					this.OnAmbulanceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmbulanceLocation", DbType="Int")]
		public System.Nullable<int> AmbulanceLocation
		{
			get
			{
				return this._AmbulanceLocation;
			}
			set
			{
				if ((this._AmbulanceLocation != value))
				{
					if (this._Hospital.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAmbulanceLocationChanging(value);
					this.SendPropertyChanging();
					this._AmbulanceLocation = value;
					this.SendPropertyChanged("AmbulanceLocation");
					this.OnAmbulanceLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Đang_Hoạt_Động", DbType="Bit")]
		public System.Nullable<bool> Đang_Hoạt_Động
		{
			get
			{
				return this._Đang_Hoạt_Động;
			}
			set
			{
				if ((this._Đang_Hoạt_Động != value))
				{
					this.OnĐang_Hoạt_ĐộngChanging(value);
					this.SendPropertyChanging();
					this._Đang_Hoạt_Động = value;
					this.SendPropertyChanged("Đang_Hoạt_Động");
					this.OnĐang_Hoạt_ĐộngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hospital_Ambulance", Storage="_Hospital", ThisKey="AmbulanceLocation", OtherKey="HospitalID", IsForeignKey=true)]
		public Hospital Hospital
		{
			get
			{
				return this._Hospital.Entity;
			}
			set
			{
				Hospital previousValue = this._Hospital.Entity;
				if (((previousValue != value) 
							|| (this._Hospital.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hospital.Entity = null;
						previousValue.Ambulances.Remove(this);
					}
					this._Hospital.Entity = value;
					if ((value != null))
					{
						value.Ambulances.Add(this);
						this._AmbulanceLocation = value.HospitalID;
					}
					else
					{
						this._AmbulanceLocation = default(Nullable<int>);
					}
					this.SendPropertyChanged("Hospital");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AmbulanceMission")]
	public partial class AmbulanceMission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AmbulanceId;
		
		private string _AmbulanceName;
		
		private string _MissionType;
		
		private System.Nullable<bool> _View;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAmbulanceIdChanging(string value);
    partial void OnAmbulanceIdChanged();
    partial void OnAmbulanceNameChanging(string value);
    partial void OnAmbulanceNameChanged();
    partial void OnMissionTypeChanging(string value);
    partial void OnMissionTypeChanged();
    partial void OnViewChanging(System.Nullable<bool> value);
    partial void OnViewChanged();
    #endregion
		
		public AmbulanceMission()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmbulanceId", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AmbulanceId
		{
			get
			{
				return this._AmbulanceId;
			}
			set
			{
				if ((this._AmbulanceId != value))
				{
					this.OnAmbulanceIdChanging(value);
					this.SendPropertyChanging();
					this._AmbulanceId = value;
					this.SendPropertyChanged("AmbulanceId");
					this.OnAmbulanceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmbulanceName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string AmbulanceName
		{
			get
			{
				return this._AmbulanceName;
			}
			set
			{
				if ((this._AmbulanceName != value))
				{
					this.OnAmbulanceNameChanging(value);
					this.SendPropertyChanging();
					this._AmbulanceName = value;
					this.SendPropertyChanged("AmbulanceName");
					this.OnAmbulanceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionType", DbType="NChar(10)")]
		public string MissionType
		{
			get
			{
				return this._MissionType;
			}
			set
			{
				if ((this._MissionType != value))
				{
					this.OnMissionTypeChanging(value);
					this.SendPropertyChanging();
					this._MissionType = value;
					this.SendPropertyChanged("MissionType");
					this.OnMissionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[View]", Storage="_View", DbType="Bit")]
		public System.Nullable<bool> View
		{
			get
			{
				return this._View;
			}
			set
			{
				if ((this._View != value))
				{
					this.OnViewChanging(value);
					this.SendPropertyChanging();
					this._View = value;
					this.SendPropertyChanged("View");
					this.OnViewChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
